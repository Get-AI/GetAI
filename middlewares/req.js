function _0x5353() { const _0x8f43dd = ['readFromFile', '369vNFQVr', 'Unable\x20to\x20create\x20QR\x20code.', 'split', 'warn', 'forEach', 'replace', 'isDirectory', 'open', 'connection.update', 'headersSent', 'checked', 'contacts.set', 'unlinkSync', 'URI', 'messages.upsert', 'delete', 'startsWith', '/contacts/', 'output', 'join', '22952MDgYrZ', 'bind', 'writeToFile', 'rmdirSync', 'Unable\x20to\x20create\x20session.', 'sessions', '3349265tzxOaA', '/api/bot/webhook', 'creds.update', 'cwd', 'DELETE\x20FROM\x20instance\x20WHERE\x20client_id\x20=\x20?', 'substring', '@g.us', 'chats', 'close', 'Reconnecting...', '1399156RtBLCY', 'fromMe', '@s.whatsapp.net', 'get', 'ubuntu', '6IcqFoK', 'chats.set', 'exists', 'md_', '7519848EmxqLE', 'onWhatsApp', '1794200FFpULE', 'log', 'groupMetadata', 'notify', 'sendMessage', 'Chrome', '.json', '_store', 'endsWith', 'set', 'values', 'restartRequired', 'env', 'store', 'contacts', 'type', '7113951XqhLZI', 'Running\x20cleanup\x20before\x20exit.', 'statusCode', 'isLegacy', 'reject', '726481TMtgrf', 'logout']; _0x5353 = function () { return _0x8f43dd; }; return _0x5353(); } (function (_0x18cddb, _0xc09657) { const _0x851524 = _0x113f, _0x299a54 = _0x18cddb(); while (!![]) { try { const _0x1069d7 = -parseInt(_0x851524(0x147)) / 0x1 + -parseInt(_0x851524(0x16e)) / 0x2 + -parseInt(_0x851524(0x14a)) / 0x3 * (parseInt(_0x851524(0x15e)) / 0x4) + -parseInt(_0x851524(0x164)) / 0x5 * (-parseInt(_0x851524(0x173)) / 0x6) + parseInt(_0x851524(0x177)) / 0x7 + parseInt(_0x851524(0x179)) / 0x8 + parseInt(_0x851524(0x142)) / 0x9; if (_0x1069d7 === _0xc09657) break; else _0x299a54['push'](_0x299a54['shift']()); } catch (_0x4099aa) { _0x299a54['push'](_0x299a54['shift']()); } } }(_0x5353, 0x99136)); import { existsSync, unlinkSync, readdir } from 'fs'; import { join } from 'path'; import _0x303b94 from 'pino'; import _0x3e0ff4, { makeInMemoryStore, Browsers, DisconnectReason, delay, useMultiFileAuthState } from '@whiskeysockets/baileys'; import { toDataURL } from 'qrcode'; function _0x113f(_0x4db462, _0x196cff) { const _0x5353d2 = _0x5353(); return _0x113f = function (_0x113f35, _0x9318c9) { _0x113f35 = _0x113f35 - 0x13f; let _0x5c5e1b = _0x5353d2[_0x113f35]; return _0x5c5e1b; }, _0x113f(_0x4db462, _0x196cff); } import _0x4f28aa from '../dirname.js'; import _0x472e82 from '../database/dbpromise.js'; import _0x330236 from '../response.js'; import { webhook } from '../routes/aiBot.js'; import { createJsonFile, deleteFileIfExists } from '../functions/function.js'; import _0x2687b5 from 'fs'; import _0x30a914 from 'path'; const sessions = new Map(), retries = new Map(), sessionsDir = (_0x44f0a7 = '') => { const _0x2897ad = _0x113f; return join(_0x4f28aa, _0x2897ad(0x163), _0x44f0a7 ? _0x44f0a7 + _0x2897ad(0x17f) : ''); }, isSessionExists = _0x1c671f => { return sessions['has'](_0x1c671f); }, isSessionFileExists = _0x154aec => { return existsSync(sessionsDir(_0x154aec)); }, shouldReconnect = _0x321ce3 => { const _0x3d3e2a = _0x113f; let _0xadc65e = parseInt(0x5), _0x36ee24 = retries[_0x3d3e2a(0x171)](_0x321ce3) ?? 0x0; _0xadc65e = _0xadc65e < 0x1 ? 0x1 : _0xadc65e; if (_0x36ee24 < _0xadc65e) return ++_0x36ee24, console[_0x3d3e2a(0x17a)](_0x3d3e2a(0x16d), { 'attempts': _0x36ee24, 'sessionId': _0x321ce3 }), retries['set'](_0x321ce3, _0x36ee24), !![]; return ![]; }, createSession = async (_0x3afdc7, _0x68d38c = ![], _0x59213e = null, _0x1a6fe9) => { const _0x139092 = _0x113f, _0x2ba263 = _0x139092(0x176) + _0x3afdc7, _0x4a1f90 = _0x303b94({ 'level': _0x139092(0x14d) }), _0xbb5b8c = makeInMemoryStore({ 'logger': _0x4a1f90 }), { state: _0x2775a6, saveCreds: _0x551a0a } = await useMultiFileAuthState(sessionsDir(_0x2ba263)), _0x2535e4 = { 'auth': _0x2775a6, 'printQRInTerminal': ![], 'logger': _0x4a1f90, 'browser': Browsers[_0x139092(0x172)](_0x139092(0x17e)), 'syncFullHistory': !![] }, _0x3cdd46 = _0x3e0ff4['default'](_0x2535e4); !_0x68d38c && (_0xbb5b8c[_0x139092(0x149)](sessionsDir(_0x3afdc7 + _0x139092(0x180))), _0xbb5b8c[_0x139092(0x15f)](_0x3cdd46['ev'])), sessions[_0x139092(0x182)](_0x3afdc7, { ..._0x3cdd46, 'store': _0xbb5b8c, 'isLegacy': _0x68d38c }), _0x3cdd46['ev']['on'](_0x139092(0x166), _0x551a0a), _0x3cdd46['ev']['on'](_0x139092(0x174), ({ chats: _0x472f1a }) => { const _0x60ff71 = _0x139092; _0x68d38c && _0xbb5b8c[_0x60ff71(0x16b)]['insertIfAbsent'](..._0x472f1a); }), _0x3cdd46['ev']['on'](_0x139092(0x155), () => { const _0x49844d = _0x139092; createJsonFile(_0x3afdc7, Object[_0x49844d(0x183)](_0xbb5b8c[_0x49844d(0x140)])); }), _0x3cdd46['ev']['on'](_0x139092(0x158), async _0x2cd7e7 => { const _0x205075 = _0x139092, _0x16ced0 = _0x2cd7e7['messages'][0x0]; if (!_0x16ced0['key'][_0x205075(0x16f)] && _0x2cd7e7[_0x205075(0x141)] === _0x205075(0x17c)) { await delay(0x3e8); const _0x41005c = process[_0x205075(0x185)][_0x205075(0x157)] + _0x205075(0x165); await webhook(_0x2cd7e7, _0x3cdd46, _0x3afdc7); } }), _0x3cdd46['ev']['on'](_0x139092(0x152), async _0x20a0d => { const _0x3b80b8 = _0x139092, { connection: _0x2e1b71, lastDisconnect: _0x258b69 } = _0x20a0d, _0x425712 = _0x258b69?.['error']?.[_0x3b80b8(0x15c)]?.[_0x3b80b8(0x144)]; console[_0x3b80b8(0x17a)]('message', _0x2e1b71); _0x2e1b71 === _0x3b80b8(0x151) && retries[_0x3b80b8(0x159)](_0x3afdc7); if (_0x2e1b71 === _0x3b80b8(0x16c)) { if (_0x425712 === DisconnectReason['loggedOut'] || !shouldReconnect(_0x3afdc7)) return _0x59213e && !_0x59213e[_0x3b80b8(0x153)] && _0x330236(_0x59213e, 0x1f4, ![], _0x3b80b8(0x162)), deleteSession(_0x3afdc7, _0x68d38c); setTimeout(() => { createSession(_0x3afdc7, _0x68d38c, _0x59213e); }, _0x425712 === DisconnectReason[_0x3b80b8(0x184)] ? 0x0 : parseInt(0x1388)); } if (_0x20a0d['qr']) { if (_0x59213e && !_0x59213e[_0x3b80b8(0x153)]) try { const _0x174381 = await toDataURL(_0x20a0d['qr']); _0x330236(_0x59213e, 0xc8, !![], 'QR\x20code\x20received,\x20please\x20scan\x20the\x20QR\x20code.', { 'qr': _0x174381 }); return; } catch { _0x330236(_0x59213e, 0x1f4, ![], _0x3b80b8(0x14b)); } try { await _0x3cdd46[_0x3b80b8(0x148)](); } catch { } finally { deleteSession(_0x3afdc7, _0x68d38c); } } }); }, getSession = _0x866600 => { const _0x51d7f7 = _0x113f; return sessions[_0x51d7f7(0x171)](_0x866600) ?? null; }, deleteDirectory = _0xbcb22b => { const _0x1ca86e = _0x113f; _0x2687b5['existsSync'](_0xbcb22b) && (_0x2687b5['readdirSync'](_0xbcb22b)[_0x1ca86e(0x14e)](_0x5b0f6b => { const _0x4b5de7 = _0x1ca86e, _0x3b29ec = _0xbcb22b + '/' + _0x5b0f6b; _0x2687b5['lstatSync'](_0x3b29ec)[_0x4b5de7(0x150)]() ? deleteDirectory(_0x3b29ec) : _0x2687b5[_0x4b5de7(0x156)](_0x3b29ec); }), _0x2687b5[_0x1ca86e(0x161)](_0xbcb22b)); }, deleteSession = async (_0xf6c6ae, _0x581cdc = ![]) => { const _0x424797 = _0x113f, _0x21ec61 = _0x424797(0x176) + _0xf6c6ae, _0x1bd4cc = _0xf6c6ae + '_store'; await _0x472e82(_0x424797(0x168), [_0xf6c6ae]); const _0xa6b82d = process[_0x424797(0x167)](); deleteFileIfExists(_0xa6b82d + _0x424797(0x15b) + _0xf6c6ae + _0x424797(0x17f)), isSessionFileExists(_0x21ec61) && deleteDirectory(sessionsDir(_0x21ec61)), isSessionFileExists(_0x1bd4cc) && unlinkSync(sessionsDir(_0x1bd4cc)), sessions[_0x424797(0x159)](_0xf6c6ae), retries[_0x424797(0x159)](_0xf6c6ae); }, getChatList = (_0x329620, _0x5a5e59 = ![]) => { const _0x21098b = _0x113f, _0x321630 = _0x5a5e59 ? '@g.us' : '@s.whatsapp.net'; return getSession(_0x329620)['store'][_0x21098b(0x16b)]['filter'](_0x4b1a20 => { const _0x337730 = _0x21098b; return _0x4b1a20['id'][_0x337730(0x181)](_0x321630); }); }, isExists = async (_0x15783b, _0x1313a5, _0x216304 = ![]) => { const _0xd63c3b = _0x113f; try { let _0x401d26; if (_0x216304) return _0x401d26 = await _0x15783b[_0xd63c3b(0x17b)](_0x1313a5), Boolean(_0x401d26['id']); if (_0x15783b[_0xd63c3b(0x145)]) _0x401d26 = await _0x15783b[_0xd63c3b(0x178)](_0x1313a5); else { ;[_0x401d26] = await _0x15783b[_0xd63c3b(0x178)](_0x1313a5); if (typeof _0x401d26 === 'undefined') { console['log'](_0xd63c3b(0x154)); const _0x333138 = _0x1313a5['replace'](_0xd63c3b(0x170), '');[_0x401d26] = await _0x15783b['onWhatsApp']('+' + _0x333138); } } return _0x401d26[_0xd63c3b(0x175)]; } catch { return ![]; } }, sendMessage = async (_0xc48454, _0x17843e, _0x100abe) => { const _0x1435f6 = _0x113f; try { return await delay(0x3e8), _0xc48454[_0x1435f6(0x17d)](_0x17843e, _0x100abe); } catch { return Promise[_0x1435f6(0x146)](null); } }, getGroupData = async (_0x2285f6, _0x2d18d7) => { const _0x1f2636 = _0x113f; try { const _0x13ff87 = await _0x2285f6['groupMetadata'](_0x2d18d7); return _0x13ff87; } catch { return Promise[_0x1f2636(0x146)](null); } }, formatPhone = _0x26b7bf => { const _0x41c57b = _0x113f; if (_0x26b7bf[_0x41c57b(0x181)](_0x41c57b(0x170))) return _0x26b7bf; let _0x4b4744 = _0x26b7bf[_0x41c57b(0x14f)](/\D/g, ''); return _0x4b4744 += _0x41c57b(0x170); }, formatGroup = _0x131639 => { const _0x36293a = _0x113f; if (_0x131639[_0x36293a(0x181)]('@g.us')) return _0x131639; let _0x50e972 = _0x131639[_0x36293a(0x14f)](/[^\d-]/g, ''); return _0x50e972 += _0x36293a(0x16a); }, cleanup = () => { const _0x334e28 = _0x113f; console['log'](_0x334e28(0x143)), sessions[_0x334e28(0x14e)]((_0x3a46de, _0x9e7d0f) => { const _0x123072 = _0x334e28; !_0x3a46de['isLegacy'] && _0x3a46de[_0x123072(0x13f)][_0x123072(0x160)](sessionsDir(_0x9e7d0f + _0x123072(0x180))); }); }, init = () => { const _0x129876 = _0x113f, _0x52ae10 = _0x30a914[_0x129876(0x15d)](_0x4f28aa, _0x129876(0x163)); _0x2687b5['readdir'](_0x52ae10, (_0xa9b864, _0x15d107) => { const _0x20f933 = _0x129876; if (_0xa9b864) throw _0xa9b864; for (const _0x2c9cb2 of _0x15d107) { if (!_0x2c9cb2[_0x20f933(0x181)](_0x20f933(0x17f)) || !_0x2c9cb2[_0x20f933(0x15a)](_0x20f933(0x176)) || _0x2c9cb2['includes'](_0x20f933(0x180))) continue; const _0x46cbd5 = _0x2c9cb2[_0x20f933(0x14f)](_0x20f933(0x17f), ''), _0x183d01 = _0x46cbd5[_0x20f933(0x14c)]('_', 0x1)[0x0] !== 'md', _0x32405a = _0x46cbd5[_0x20f933(0x169)](_0x183d01 ? 0x7 : 0x3); createSession(_0x32405a, _0x183d01); } }); }; export { isSessionExists, createSession, getSession, deleteSession, getChatList, isExists, sendMessage, formatPhone, formatGroup, cleanup, init, getGroupData };