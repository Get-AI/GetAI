(function (_0x155c30, _0x3b968a) { const _0x1f04bc = _0x4014, _0x287c0f = _0x155c30(); while (!![]) { try { const _0x39c2b3 = parseInt(_0x1f04bc(0x17a)) / 0x1 * (-parseInt(_0x1f04bc(0x18b)) / 0x2) + parseInt(_0x1f04bc(0x18f)) / 0x3 * (parseInt(_0x1f04bc(0x188)) / 0x4) + -parseInt(_0x1f04bc(0x196)) / 0x5 + parseInt(_0x1f04bc(0x18c)) / 0x6 * (parseInt(_0x1f04bc(0x187)) / 0x7) + parseInt(_0x1f04bc(0x184)) / 0x8 + -parseInt(_0x1f04bc(0x178)) / 0x9 * (parseInt(_0x1f04bc(0x176)) / 0xa) + parseInt(_0x1f04bc(0x19c)) / 0xb; if (_0x39c2b3 === _0x3b968a) break; else _0x287c0f['push'](_0x287c0f['shift']()); } catch (_0x80faa0) { _0x287c0f['push'](_0x287c0f['shift']()); } } }(_0x1a1e, 0xf39dd)); import _0x52e206 from '../../database/dbpromise.js'; import _0x32ff38 from 'node-fetch'; import _0x46a58b from 'jsonwebtoken'; const { sign } = _0x46a58b; import _0x2fb3e1 from 'fs'; import { OpenAIApi, Configuration } from 'openai'; import _0x17f727 from 'path'; function _0x4014(_0x4afc70, _0xeb4566) { const _0x1a1e04 = _0x1a1e(); return _0x4014 = function (_0x401477, _0x3ca636) { _0x401477 = _0x401477 - 0x16d; let _0x21afa4 = _0x1a1e04[_0x401477]; return _0x21afa4; }, _0x4014(_0x4afc70, _0xeb4566); } import { Bard } from '../chatting/bard-by-hamid/dist/index.js'; function deleteFilePathIfExists(_0xabbd91) { const _0x82e93f = _0x4014; _0x2fb3e1[_0x82e93f(0x177)](_0xabbd91, _0x2fb3e1[_0x82e93f(0x172)][_0x82e93f(0x199)], _0x589926 => { const _0x24ab45 = _0x82e93f; if (_0x589926) { console[_0x24ab45(0x173)](_0x24ab45(0x195)); return; } _0x2fb3e1[_0x24ab45(0x19b)](_0xabbd91, _0x551add => { const _0x5c5347 = _0x24ab45; if (_0x551add) { console[_0x5c5347(0x17f)](_0x5c5347(0x17d), _0x551add); return; } console[_0x5c5347(0x173)](_0x5c5347(0x183)); }); }); } function getReplyFromBard(_0x3cca04, _0x4338c9) { return new Promise(async _0x5854e5 => { const _0x72e9b4 = _0x4014; try { const _0x16cfe4 = '__Secure-1PSID=' + _0x4338c9; let _0x2055ae = new Bard(_0x16cfe4), _0xf222ea = await _0x2055ae[_0x72e9b4(0x185)](_0x3cca04); _0x5854e5({ 'success': !![], 'reply': _0xf222ea }); } catch (_0x555566) { _0x5854e5({ 'msg': _0x72e9b4(0x189), 'err': _0x555566 }); } }); } function createFilePath(_0x3ff050) { return new Promise((_0x4d7226, _0x4d2713) => { const _0x1893f4 = _0x4014; if (!_0x2fb3e1[_0x1893f4(0x16f)](_0x3ff050)) { const _0x22ba72 = _0x17f727[_0x1893f4(0x198)](_0x3ff050); !_0x2fb3e1[_0x1893f4(0x16f)](_0x22ba72) ? _0x2fb3e1[_0x1893f4(0x190)](_0x22ba72, { 'recursive': !![] }, _0x40b734 => { _0x40b734 ? _0x4d2713(_0x40b734) : _0x2fb3e1['writeFile'](_0x3ff050, '[]', _0x556cb2 => { const _0x1a4da6 = _0x4014; _0x556cb2 ? _0x4d2713(_0x556cb2) : _0x4d7226(_0x1a4da6(0x17b) + _0x3ff050); }); }) : _0x2fb3e1[_0x1893f4(0x181)](_0x3ff050, '[]', _0x2999a4 => { const _0x22be83 = _0x1893f4; _0x2999a4 ? _0x4d2713(_0x2999a4) : _0x4d7226(_0x22be83(0x17b) + _0x3ff050); }); } else _0x4d7226(_0x1893f4(0x192) + _0x3ff050); }); } function pushObjectToArrayAndDeleteOld(_0x59f7c2, _0x3cd747) { return new Promise((_0xa12f18, _0x5eddbe) => { const _0x1307e4 = _0x4014; _0x2fb3e1[_0x1307e4(0x182)](_0x59f7c2, _0x1307e4(0x180), (_0x506560, _0x467545) => { const _0x4fb5c3 = _0x1307e4; if (_0x506560) { _0x5eddbe(_0x506560); return; } let _0x3d54bd; try { _0x3d54bd = JSON[_0x4fb5c3(0x191)](_0x467545); } catch (_0x4c6aaf) { _0x5eddbe(_0x4c6aaf); return; } if (!Array['isArray'](_0x3d54bd)) { _0x5eddbe(new Error(_0x4fb5c3(0x179))); return; } _0x3d54bd[_0x4fb5c3(0x194)](_0x3cd747); _0x3d54bd['length'] > 0x3e8 && (_0x3d54bd = _0x3d54bd[_0x4fb5c3(0x171)](-0x3e8)); const _0x407173 = JSON[_0x4fb5c3(0x186)](_0x3d54bd, null, 0x2); _0x2fb3e1[_0x4fb5c3(0x181)](_0x59f7c2, _0x407173, 'utf8', _0x3c8ddc => { _0x3c8ddc ? _0x5eddbe(_0x3c8ddc) : _0xa12f18(); }); }); }); } function _0x1a1e() { const _0x1e8827 = ['dirname', 'F_OK', 'length', 'unlink', '11474485JCPSWA', 'code', 'message', 'existsSync', 'openai_keys', 'slice', 'constants', 'log', 'isArray', 'env', '10behQSA', 'access', '531594lawOsr', 'File\x20does\x20not\x20contain\x20an\x20array', '1004896yynjpL', 'File\x20created\x20at\x20', 'ENOENT', 'Error\x20deleting\x20file:', 'OPENAIMODEL', 'error', 'utf8', 'writeFile', 'readFile', 'File\x20deleted\x20successfully!', '6525896eDeiZo', 'ask', 'stringify', '56WFnaWM', '8OPMniZ', 'Something\x20went\x20wrong,\x20Try\x20again\x20later', 'choices', '2lAQjna', '1010148lFYVxI', 'data', 'split', '832569ppJtAe', 'mkdir', 'parse', 'File\x20already\x20exists\x20at\x20', 'createChatCompletion', 'push', 'File\x20does\x20not\x20exist.\x20Ignoring\x20file\x20deletion.', '8494835qUhFum', 'trim']; _0x1a1e = function () { return _0x1e8827; }; return _0x1a1e(); } function readJsonFile(_0x528415) { return new Promise((_0x2e5f32, _0x5450f3) => { const _0x5f1cef = _0x4014; _0x2fb3e1[_0x5f1cef(0x182)](_0x528415, 'utf8', (_0x55c66b, _0x1294fc) => { const _0x5a4871 = _0x5f1cef; if (_0x55c66b) _0x5450f3(_0x55c66b); else try { const _0x14a99e = JSON['parse'](_0x1294fc), _0x1647bc = _0x14a99e[_0x5a4871(0x171)](-0xa); _0x2e5f32(_0x1647bc); } catch (_0x3763d0) { _0x5450f3(_0x3763d0); } }); }); } function readJsonOldChat(_0x9c6499) { return new Promise((_0x9c98c, _0x47d53e) => { const _0x30b1ed = _0x4014; _0x2fb3e1[_0x30b1ed(0x182)](_0x9c6499, 'utf8', (_0x2b5107, _0x25a44e) => { const _0x270987 = _0x30b1ed; if (_0x2b5107) _0x47d53e(_0x2b5107); else try { const _0x2aae3f = JSON[_0x270987(0x191)](_0x25a44e), _0x2542a0 = _0x2aae3f[_0x270987(0x171)](-0x28); _0x9c98c(_0x2542a0); } catch (_0x396b8f) { _0x47d53e(_0x396b8f); } }); }); } function readJsonArray(_0x46096c) { return new Promise((_0x405fb6, _0x3ff03f) => { const _0x4d18d3 = _0x4014; _0x2fb3e1[_0x4d18d3(0x182)](_0x46096c, _0x4d18d3(0x180), (_0x53461a, _0x369695) => { const _0x4f52f9 = _0x4d18d3; if (_0x53461a) _0x53461a[_0x4f52f9(0x16d)] === _0x4f52f9(0x17c) ? _0x405fb6([]) : _0x3ff03f(_0x53461a); else try { const _0x1f654a = JSON[_0x4f52f9(0x191)](_0x369695); if (Array[_0x4f52f9(0x174)](_0x1f654a)) { const _0x41a2e8 = _0x1f654a['slice'](0x0, 0x12c); _0x405fb6(_0x41a2e8); } else _0x3ff03f(new Error('Invalid\x20JSON\x20data.\x20Expected\x20an\x20array.')); } catch (_0xc6a71e) { _0x3ff03f(_0xc6a71e); } }); }); } function returnPost(_0x40436b) { return new Promise(async _0x52d1b7 => { const _0x27d5ab = _0x4014; try { const _0x88b36b = await _0x52e206('SELECT\x20*\x20FROM\x20apikeys', []), _0x8b2dd5 = _0x88b36b[0x0][_0x27d5ab(0x170)], _0x83e5d5 = new Configuration({ 'apiKey': _0x8b2dd5 }), _0x949f91 = new OpenAIApi(_0x83e5d5), _0x483eaf = await _0x949f91[_0x27d5ab(0x193)]({ 'model': process[_0x27d5ab(0x175)][_0x27d5ab(0x17e)], 'messages': _0x40436b }), _0x5c6589 = _0x483eaf?.[_0x27d5ab(0x18d)]?.[_0x27d5ab(0x18a)][0x0]?.[_0x27d5ab(0x16e)]['content']; _0x52d1b7({ 'reply': _0x5c6589, 'success': !![] }); } catch (_0x1ccef3) { console[_0x27d5ab(0x173)](JSON[_0x27d5ab(0x186)](_0x1ccef3)), _0x52d1b7({ 'blog': '', 'success': ![] }); } }); } function getWordCount(_0x1ea2ca) { const _0xa2c742 = _0x4014; _0x1ea2ca = _0x1ea2ca[_0xa2c742(0x197)](); const _0x312dc8 = _0x1ea2ca[_0xa2c742(0x18e)](/\s+/); return _0x312dc8[_0xa2c742(0x19a)]; } export { createFilePath, deleteFilePathIfExists, readJsonOldChat, getReplyFromBard, returnPost, readJsonArray, pushObjectToArrayAndDeleteOld, readJsonFile, getWordCount };